[{"D:\\React_Project\\covidtracker\\src\\index.js":"1","D:\\React_Project\\covidtracker\\src\\App.js":"2","D:\\React_Project\\covidtracker\\src\\reportWebVitals.js":"3","D:\\React_Project\\covidtracker\\src\\components\\Header.js":"4","D:\\React_Project\\covidtracker\\src\\components\\History.js":"5","D:\\React_Project\\covidtracker\\src\\components\\WorldTracker.js":"6","D:\\React_Project\\covidtracker\\src\\components\\India.js":"7","D:\\React_Project\\covidtracker\\src\\components\\Country.js":"8","D:\\React_Project\\covidtracker\\src\\components\\Home.js":"9","D:\\React_Project\\covidtracker\\src\\components\\IndianState.js":"10","D:\\React_Project\\covidtracker\\src\\components\\Symptoms.js":"11"},{"size":587,"mtime":1607328170579,"results":"12","hashOfConfig":"13"},{"size":991,"mtime":1607431651271,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":604,"mtime":1607418075378,"results":"16","hashOfConfig":"13"},{"size":2568,"mtime":1607419163731,"results":"17","hashOfConfig":"13"},{"size":5875,"mtime":1607502968009,"results":"18","hashOfConfig":"13"},{"size":2959,"mtime":1607430755814,"results":"19","hashOfConfig":"13"},{"size":1176,"mtime":1607351755602,"results":"20","hashOfConfig":"13"},{"size":2611,"mtime":1607756943338,"results":"21","hashOfConfig":"13"},{"size":5898,"mtime":1607502956890,"results":"22","hashOfConfig":"13"},{"size":2897,"mtime":1607433344239,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1p5xulb",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\React_Project\\covidtracker\\src\\index.js",[],["51","52"],"D:\\React_Project\\covidtracker\\src\\App.js",[],"D:\\React_Project\\covidtracker\\src\\reportWebVitals.js",[],"D:\\React_Project\\covidtracker\\src\\components\\Header.js",[],"D:\\React_Project\\covidtracker\\src\\components\\History.js",[],"D:\\React_Project\\covidtracker\\src\\components\\WorldTracker.js",["53","54"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Loading from './Assets/loading-gear.gif'\r\nimport { FaSortAmountUpAlt, FaSortAmountDown } from 'react-icons/fa';\r\nfunction WorldTracker() {\r\n    const [covidData, setCovidData] = useState(null);\r\n    //api call\r\n    let getData = async () => {\r\n        let data = await fetch('https://corona.lmao.ninja/v2/countries?yesterday&sort');\r\n        let jsonData = await data.json()\r\n        setCovidData(jsonData);\r\n    };\r\n    let count = 0;\r\n\r\n    //to make an api call when our component mounts\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n    //inline styles\r\n    let inlineStyle = {\r\n        textDecoration: 'none',\r\n        color: 'inherit'\r\n    };\r\n    let country = {\r\n        fontWeight: 'bold',\r\n    };\r\n    let cases = {\r\n        color: 'black',\r\n        fontWeight: 'bold',\r\n    }\r\n    let active = {\r\n        color: '#b8860b',\r\n        fontWeight: 'bold',\r\n    };\r\n    let deaths = {\r\n        color: '#ff0000',\r\n        fontWeight: 'bold',\r\n    };\r\n    let recovered = {\r\n        color: '#ADFF2F',\r\n        fontWeight: 'bold',\r\n    };\r\n    let thead = {\r\n        backgroundColor: '#e3dac9',\r\n    }\r\n    return (\r\n        <div>\r\n            {covidData == null ? <><img src={Loading} alt='Loading Gear' /><span>Loading...</span></> :\r\n                <table>\r\n                    <tr style={thead}>\r\n                        <td className='serial'>#</td>\r\n                        <td><h3>Countries <br /> <FaSortAmountUpAlt onClick={() => {\r\n                            const sortedArray = covidData.concat().sort((a, b) => {\r\n                                return a.country < b.country ? -1 : 1;\r\n                            });\r\n                            setCovidData(sortedArray)\r\n                        }} />\r\n                            <FaSortAmountDown onClick={() => {\r\n                                const sortedArray = covidData.concat().sort((a, b) => {\r\n                                    return a.country > b.country ? -1 : 1;\r\n                                });\r\n                                setCovidData(sortedArray)\r\n                            }} /></h3></td>\r\n                        <td><h3>Total<br /> Confirmed<br /> Cases <br /><FaSortAmountUpAlt onClick={() => {\r\n                            const sortedArray = covidData.concat().sort((a, b) => {\r\n                                return a.cases < b.cases ? -1 : 1;\r\n                            });\r\n                            setCovidData(sortedArray)\r\n                        }} />\r\n                            <FaSortAmountDown onClick={() => {\r\n                                const sortedArray = covidData.concat().sort((a, b) => {\r\n                                    return a.cases > b.cases ? -1 : 1;\r\n                                });\r\n                                setCovidData(sortedArray)\r\n                            }} /></h3></td>\r\n                        <td><h3>Active<br /> Cases<br /><FaSortAmountUpAlt onClick={() => {\r\n                            const sortedArray = covidData.concat().sort((a, b) => {\r\n                                return a.active < b.active ? -1 : 1;\r\n                            });\r\n                            setCovidData(sortedArray)\r\n                        }} />\r\n                            <FaSortAmountDown onClick={() => {\r\n                                const sortedArray = covidData.concat().sort((a, b) => {\r\n                                    return a.active > b.active ? -1 : 1;\r\n                                });\r\n                                setCovidData(sortedArray)\r\n                            }} /></h3></td>\r\n                        <td><h3>Total<br /> Deaths<br /><FaSortAmountUpAlt onClick={() => {\r\n                            const sortedArray = covidData.concat().sort((a, b) => {\r\n                                return a.deaths < b.deaths ? -1 : 1;\r\n                            });\r\n                            setCovidData(sortedArray)\r\n                        }} />\r\n                            <FaSortAmountDown onClick={() => {\r\n                                const sortedArray = covidData.concat().sort((a, b) => {\r\n                                    return a.deaths > b.deaths ? -1 : 1;\r\n                                });\r\n                                setCovidData(sortedArray)\r\n                            }} /></h3></td>\r\n                        <td><h3>Total<br /> Recovered<br /><FaSortAmountUpAlt onClick={() => {\r\n                            const sortedArray = covidData.concat().sort((a, b) => {\r\n                                return a.recovered < b.recovered ? -1 : 1;\r\n                            });\r\n                            setCovidData(sortedArray)\r\n                        }} />\r\n                            <FaSortAmountDown onClick={() => {\r\n                                const sortedArray = covidData.concat().sort((a, b) => {\r\n                                    return a.recovered > b.recovered ? -1 : 1;\r\n                                });\r\n                                setCovidData(sortedArray)\r\n                            }} /></h3></td>\r\n                    </tr>\r\n                    {covidData.map((ele) => {\r\n                        return (<tr>\r\n                            <td className='serial'>{++count}</td>\r\n                            <td style={country}>{ele && ele.country}</td>\r\n                            <td style={cases}>{ele && ele.cases}</td>\r\n                            <td style={active}>{ele && ele.active}</td>\r\n                            <td style={deaths}>{ele && ele.deaths}</td>\r\n                            <td style={recovered}>{ele && ele.recovered}</td>\r\n                        </tr>)\r\n                    })}\r\n                </table>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorldTracker\r\n","D:\\React_Project\\covidtracker\\src\\components\\India.js",["55"],"import React, { useState, useEffect } from 'react';\r\nimport Lottie from 'react-lottie';\r\nimport animationData from './Assets/IndianFlag.json';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from './Assets/loading-gear.gif';\r\nimport IndianFlagLogo from './Assets/Daco_4755198.png';\r\nfunction India() {\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: \"xMidYMid slice\"\r\n        }\r\n    };\r\n    let currentDateInfo = new Date();\r\n    const [covidData, setCovidData] = useState(null);\r\n    const month = {\r\n        1: 'January',\r\n        2: 'February',\r\n        3: 'March',\r\n        4: 'April',\r\n        5: 'May',\r\n        6: 'June',\r\n        7: 'July',\r\n        8: 'August',\r\n        9: 'September',\r\n        10: 'October',\r\n        11: 'November',\r\n        12: 'December'\r\n    };\r\n    //api call\r\n    let getData = async () => {\r\n        let data = await fetch('https://corona.lmao.ninja/v2/countries/India?yesterday=true&strict=true&query');\r\n        let jsonData = await data.json()\r\n        console.log(jsonData)\r\n        setCovidData(jsonData);\r\n    };\r\n    //to make an api call when our component mounts\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    let inlineStyle = {\r\n        color: '#ADFF2F'\r\n    };\r\n\r\n    let casesInlineStyle = {\r\n        color: '#b8860b'\r\n    };\r\n\r\n    let deathInlineStyle = {\r\n        color: '#ff0000'\r\n    };\r\n    let recoveredInlineStyle = {\r\n        color: '#ADFF2F',\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {covidData == null ? <><img src={Loading} alt='Loading Gear' /><span>Loading...</span></> :\r\n                <div>\r\n                    <p>{`Last Updated: ${month[currentDateInfo.getMonth() + 1]} ${currentDateInfo.getDate()}, ${currentDateInfo.getFullYear()} Time: ${currentDateInfo.getHours()}:${currentDateInfo.getMinutes()}:${currentDateInfo.getSeconds()}`}</p>\r\n                    <div className='casesInformation'>\r\n                        <h1><Lottie\r\n                            options={defaultOptions}\r\n                            height={200}\r\n                            width={200}\r\n                        />India</h1>\r\n                        <h1>Coronavirus Cases : </h1>\r\n                        <h1 style={casesInlineStyle}>{covidData ? covidData.active : null}</h1>\r\n                        <h1>Deaths : </h1>\r\n                        <h1 style={deathInlineStyle}>{covidData ? covidData.deaths : null}</h1>\r\n                        <h1>Recovered :</h1>\r\n                        <h1 style={recoveredInlineStyle}  >{covidData ? covidData.recovered : null}</h1>\r\n                        <Link to='india/states' style={inlineStyle}>\r\n                            <p>View by states</p>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default India\r\n","D:\\React_Project\\covidtracker\\src\\components\\Country.js",["56"],"import React, { useState, useEffect } from 'react'\r\nimport Loading from './Assets/loading-gear.gif'\r\nfunction Country(props) {\r\n    let param = props.match.params.country\r\n    const [covidData, setCovidData] = useState(null);\r\n    const countryCode = {\r\n        Asia : 0,\r\n        NorthAmerica : 1,\r\n        SouthAmerica : 2,\r\n        Europe : 3,\r\n        Africa : 4,\r\n        Australia : 5\r\n    };\r\n    let code = countryCode[`${param}`]\r\n    console.log(code)\r\n    //api call\r\n    let getData = async () => {\r\n        let data = await fetch('https://corona.lmao.ninja/v2/continents?yesterday=true&sort');\r\n        let jsonData = await data.json()\r\n        setCovidData(jsonData);\r\n    };\r\n    let count = 0;\r\n    //to make an api call when our component mounts\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {covidData == null ? <><img src={Loading} alt='Loading Gear'/><span>Loading...</span></>:\r\n            <>{covidData[code].countries.map((country) => {\r\n                return (<li><span>{country}</span></li>)\r\n                })}\r\n            </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country\r\n","D:\\React_Project\\covidtracker\\src\\components\\Home.js",[],"D:\\React_Project\\covidtracker\\src\\components\\IndianState.js",["57"],"import React, { useState, useEffect } from 'react';\r\nimport Loading from './Assets/loading-gear.gif';\r\nimport { FaSortAmountUpAlt, FaSortAmountDown } from 'react-icons/fa';\r\nfunction IndianState() {\r\n    const [covidData, setCovidData] = useState(null);\r\n    //api call\r\n    let getData = async () => {\r\n        let data = await fetch('https://api.covidindiatracker.com/state_data.json');\r\n        let jsonData = await data.json()\r\n        setCovidData(jsonData);\r\n    };\r\n\r\n    let count = 0;\r\n    //to make an api call when our component mounts\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n    //inline styles\r\n    let state = {\r\n        fontWeight: 'bold',\r\n    };\r\n    let cases = {\r\n        color: 'black',\r\n        fontWeight: 'bold',\r\n    }\r\n    let active = {\r\n        color: '#b8860b',\r\n        fontWeight: 'bold',\r\n    };\r\n\r\n    let deaths = {\r\n        color: '#ff0000',\r\n        fontWeight: 'bold',\r\n    };\r\n    let recovered = {\r\n        color: '#ADFF2F',\r\n        fontWeight: 'bold',\r\n    };\r\n    let thead = {\r\n        backgroundColor: '#e3dac9',\r\n    }\r\n    let sortIcon = {\r\n        marginLeft: '0px',\r\n    }\r\n    return (\r\n        <div>\r\n            {covidData == null ? <><img src={Loading} alt='Loading Gear' /><span>Loading...</span></> :\r\n                <table>\r\n                    <tr style={thead}>\r\n                        <td className='serial'>#</td>\r\n                        <td><h3>State <br /> <FaSortAmountUpAlt onClick={() => {\r\n                            const sortedArray = covidData.concat().sort((a, b) => {\r\n                                return a.state < b.state ? -1 : 1;\r\n                            });\r\n                            setCovidData(sortedArray)\r\n                        }} />\r\n                            <FaSortAmountDown onClick={() => {\r\n                                const sortedArray = covidData.concat().sort((a, b) => {\r\n                                    return a.state > b.state ? -1 : 1;\r\n                                });\r\n                                setCovidData(sortedArray)\r\n                            }} /></h3></td>\r\n                        <td><h3>Total<br /> Confirmed<br /> Cases <br /><FaSortAmountUpAlt onClick={() => {\r\n                            const sortedArray = covidData.concat().sort((a, b) => {\r\n                                return a.confirmed < b.confirmed ? -1 : 1;\r\n                            });\r\n                            setCovidData(sortedArray)\r\n                        }} />\r\n                            <FaSortAmountDown onClick={() => {\r\n                                const sortedArray = covidData.concat().sort((a, b) => {\r\n                                    return a.confirmed > b.confirmed ? -1 : 1;\r\n                                });\r\n                                setCovidData(sortedArray)\r\n                            }} /></h3></td>\r\n                        <td><h3>Active<br /> Cases<br /><FaSortAmountUpAlt onClick={() => {\r\n                            const sortedArray = covidData.concat().sort((a, b) => {\r\n                                return a.active < b.active ? -1 : 1;\r\n                            });\r\n                            setCovidData(sortedArray)\r\n                        }} />\r\n                            <FaSortAmountDown onClick={() => {\r\n                                const sortedArray = covidData.concat().sort((a, b) => {\r\n                                    return a.active > b.active ? -1 : 1;\r\n                                });\r\n                                setCovidData(sortedArray)\r\n                            }} /></h3></td>\r\n                        <td><h3>Total<br /> Deaths<br /><FaSortAmountUpAlt onClick={() => {\r\n                            const sortedArray = covidData.concat().sort((a, b) => {\r\n                                return a.deaths < b.deaths ? -1 : 1;\r\n                            });\r\n                            setCovidData(sortedArray)\r\n                        }} />\r\n                            <FaSortAmountDown onClick={() => {\r\n                                const sortedArray = covidData.concat().sort((a, b) => {\r\n                                    return a.deaths > b.deaths ? -1 : 1;\r\n                                });\r\n                                setCovidData(sortedArray)\r\n                            }} /></h3></td>\r\n                        <td><h3>Total<br /> Recovered<br /><FaSortAmountUpAlt onClick={() => {\r\n                            const sortedArray = covidData.concat().sort((a, b) => {\r\n                                return a.recovered < b.recovered ? -1 : 1;\r\n                            });\r\n                            setCovidData(sortedArray)\r\n                        }} />\r\n                            <FaSortAmountDown onClick={() => {\r\n                                const sortedArray = covidData.concat().sort((a, b) => {\r\n                                    return a.recovered > b.recovered ? -1 : 1;\r\n                                });\r\n                                setCovidData(sortedArray)\r\n                            }} /></h3></td>\r\n                    </tr>\r\n                    {covidData.map((ele) => {\r\n                        return (<tr>\r\n                            {console.log(covidData)}\r\n                            <td className='serial'>{++count}</td>\r\n                            <td id={`${count}`} style={state}>{ele.state}</td>\r\n                            <td id={`${count}`} style={cases}>{ele.confirmed}</td>\r\n                            <td id={`${count}`} style={active}>{ele.active}</td>\r\n                            <td id={`${count}`} style={deaths}>{ele.deaths}</td>\r\n                            <td id={`${count}`} style={recovered}>{ele.recovered}</td>\r\n                        </tr>)\r\n                    })}\r\n                </table>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndianState\r\n","D:\\React_Project\\covidtracker\\src\\components\\Symptoms.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":14},{"ruleId":"62","severity":1,"message":"66","line":20,"column":9,"nodeType":"64","messageId":"65","endLine":20,"endColumn":20},{"ruleId":"62","severity":1,"message":"67","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":22},{"ruleId":"62","severity":1,"message":"68","line":22,"column":9,"nodeType":"64","messageId":"65","endLine":22,"endColumn":14},{"ruleId":"62","severity":1,"message":"69","line":42,"column":9,"nodeType":"64","messageId":"65","endLine":42,"endColumn":17},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'inlineStyle' is assigned a value but never used.","'IndianFlagLogo' is defined but never used.","'count' is assigned a value but never used.","'sortIcon' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]